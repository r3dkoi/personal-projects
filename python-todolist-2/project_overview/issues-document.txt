Problems encountered:
1. Didn't know how to call the function when I made it via console so had to research how and why

2. I need the Show List to appear once more again when someone's deleting a task so its more intuitive.
Solution: Put the index and task description variables and stored it all into a task_list to make it do this.
Other solution: Unnecessary i think.

3. Wanted to have f string to say the specific task has been removed but when i do {task} it just gives me the full "task": task, "done": False. Need to figure this out.
Solution: Added the in keyword to check if the deleted_task is found in tasks. This will allow me to do a format string to see the task description.

4. Add a way for users to be able to select a range of numbers on the task list to be marked as done.
Solution: ?

5. Find ways to allow user to mark multiple tasks as done
Solution: ?

6. Feedback from user stated that they received an error in the Adding task section when they inputted string characters rather than integers.
Solution: Added a try-except block to redirect user to input integers/numbers

7. How to add file handling so to-do list can retrieve tasks from file memory 
from last user input before they shut the program. How to store it in directory.

Solution: ?

8. Make more functions rather than grouping them up in def main():
Solution: Create a separate functions file

9. Statements must be separated by newlines or semicolons
Solution: Added (()) to the print statements in the main menu section

10. ValueError raised despite having a try-except block 
Solution: ValueError was being raised outside of the try block. 

11. When assigning a function to a numbered choice, it comes up as a invalid option
Solution: Removed the print in front of the functions, since it would come out as a string and not as a integer.
        Also removed the "" that was surrounding the number choices. It converted it into a string, which wasn't my intention.
        Changed parameters to (tasks) in main.py instead of (choice) because it won't be called the function properly.

12. TypeError: 'set' object is not subscriptable. Apparently I was treating the task["done"] as a set instead of a dictionary, which is my intention of having a dictonary.
Solution: Fixed syntax in my adding_tasks section, I added a : after the key value.

13. Printing out the entire task list code when I just needed the task description that the user inputs
Solution: Because I added the user input's tasks into a dictionary, in order to just access each task, I need to access specifically the dictionary.
                Hence why I needed to do task["Task"]

14. Made an infinite loop when trying to test out the delete function
Solution: Removed the while loop and did a if-in statement instead.

15. Didn't know how to actually stop the program when making the exit function
Solution: Researched the global keyword. This will allow me to modify the global variable from within a function! Meaning I can end while loop in my main file from within my function files.
                Ran into an ImportError
                Removed import Main from the functions file instead as it made a circular import issue.
                ImportError was fixed but program still didn't terminate 
                Researched sys module and sys.exit() terminates the program

16. File Not Found:
Problem: The JSON file (stored_data.json) could not be found, resulting in an empty list being returned.
Solution: Specified the full path to the JSON file in both the main script and the functions file to ensure the program can locate and load the file correctly.

17. Tasks weren't being loaded correctly from JSON file
Soluton: Added debug print statements to check if the file was being read properly and if tasks were loaded correctly.
